version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: carwash_prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - carwash_network

  loki:
    image: grafana/loki:latest
    container_name: carwash_loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - carwash_network

  promtail:
    image: grafana/promtail:latest
    container_name: carwash_promtail
    restart: always
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - carwash_network

  grafana:
    image: grafana/grafana:latest
    container_name: carwash_grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - carwash_network
  postgres:
    image: postgres:latest
    container_name: carwash_postgres
    restart: always
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carwash_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: carwash_backend
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - carwash_network
    labels:
      - "com.docker.compose.project=smart_carwash"
      - "com.docker.compose.service=backend"
      - "log_type=application"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: carwash_frontend
    restart: always
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    networks:
      - carwash_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: carwash_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - carwash_network

networks:
  carwash_network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  loki_data:
