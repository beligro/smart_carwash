import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './WashInfo.module.css';
import { Card, Button, StatusBadge, Timer } from '../../../../shared/components/UI';
import { formatDate } from '../../../../shared/utils/formatters';
import { getSessionStatusDescription, getServiceTypeDescription, formatRefundInfo, formatAmount, formatAmountWithRefund, getPaymentStatusText, getPaymentStatusColor, formatSessionTotalCost, formatSessionDetailedCost } from '../../../../shared/utils/statusHelpers';
import useTimer from '../../../../shared/hooks/useTimer';
import ApiService from '../../../../shared/services/ApiService';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ç–∞–π–º–µ—Ä–∞ —Ö–∏–º–∏–∏
const ChemistryStatus = ({ session }) => {
  const [chemistryTimeLeft, setChemistryTimeLeft] = useState(null);

  // –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞)
  useEffect(() => {
    if (!session || !session.chemistry_started_at || session.chemistry_ended_at) {
      setChemistryTimeLeft(null);
      return;
    }

    const updateChemistryTimer = () => {
      const startTime = new Date(session.chemistry_started_at);
      const now = new Date();
      const timeLimit = (session.chemistry_time_minutes || 0) * 60 * 1000;
      const timePassed = now - startTime;
      const remaining = timeLimit - timePassed;

      if (remaining <= 0) {
        setChemistryTimeLeft(0);
      } else {
        setChemistryTimeLeft(Math.floor(remaining / 1000));
      }
    };

    updateChemistryTimer();
    const interval = setInterval(updateChemistryTimer, 1000);

    return () => clearInterval(interval);
  }, [session]);

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞
  if (session.was_chemistry_on && session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '8px', padding: '10px', backgroundColor: '#f5f5f5', borderRadius: '6px', fontSize: '12px', color: '#666' }}>
        ‚úì –•–∏–º–∏—è –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ ({session.chemistry_time_minutes} –º–∏–Ω)
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä
  if (session.was_chemistry_on && session.chemistry_started_at && !session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '12px' }}>
        <p style={{ fontSize: '13px', fontWeight: 'bold', margin: '0 0 8px 0', color: '#2e7d32' }}>
          üß™ –•–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞:
        </p>
        {chemistryTimeLeft !== null && chemistryTimeLeft > 0 ? (
          <div style={{ 
            padding: '12px', 
            backgroundColor: '#e8f5e9', 
            borderRadius: '8px',
            border: '2px solid #4caf50',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#2e7d32', marginBottom: '4px' }}>
              {Math.floor(chemistryTimeLeft / 60)}:{(chemistryTimeLeft % 60).toString().padStart(2, '0')}
            </div>
            <div style={{ fontSize: '11px', color: '#666' }}>
              –¥–æ –∞–≤—Ç–æ–≤—ã–∫–ª—é—á–µ–Ω–∏—è
            </div>
          </div>
        ) : (
          <div style={{ 
            padding: '10px', 
            backgroundColor: '#f5f5f5', 
            borderRadius: '6px',
            textAlign: 'center',
            fontSize: '12px',
            color: '#666'
          }}>
            –•–∏–º–∏—è –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...
          </div>
        )}
      </div>
    );
  }

  return null;
};

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—á–µ—Ä–µ–¥–∏ —Å –≤—Ä–µ–º–µ–Ω–µ–º –æ–∂–∏–¥–∞–Ω–∏—è
 * @param {Object} queueInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—á–µ—Ä–µ–¥–∏
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
const formatQueueText = (queueInfo) => {
  if (!queueInfo.has_queue) {
    return '–ù–µ—Ç –æ—á–µ—Ä–µ–¥–∏';
  }
  
  const baseText = `–í –æ—á–µ—Ä–µ–¥–∏: ${queueInfo.queue_size}`;
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
  if (queueInfo.wait_time_minutes && queueInfo.wait_time_minutes > 0) {
    return `${baseText} (–æ–∂–∏–¥–∞–Ω–∏–µ ~${queueInfo.wait_time_minutes} –º–∏–Ω)`;
  }
  
  return baseText;
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç WashInfo - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–π–∫–µ
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.washInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–π–∫–µ
 * @param {string} props.theme - –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ('light' –∏–ª–∏ 'dark')
 * @param {Function} props.onCreateSession - –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
 * @param {Function} props.onViewHistory - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
 * @param {Function} props.onCancelSession - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
 * @param {Object} props.user - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const WashInfo = ({ washInfo, theme = 'light', onCreateSession, onViewHistory, onCancelSession, onChemistryEnabled, user }) => {
  const navigate = useNavigate();
  const [isCanceling, setIsCanceling] = useState(false);
  const [sessionPayments, setSessionPayments] = useState(null);
  const [loadingPayments, setLoadingPayments] = useState(false);
  const [boxChanged, setBoxChanged] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ washInfo (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞)
  const allBoxes = washInfo?.allBoxes || washInfo?.all_boxes || [];
  const washQueue = washInfo?.washQueue || washInfo?.wash_queue || { queue_size: 0, has_queue: false };
  const airDryQueue = washInfo?.airDryQueue || washInfo?.air_dry_queue || { queue_size: 0, has_queue: false };
  const vacuumQueue = washInfo?.vacuumQueue || washInfo?.vacuum_queue || { queue_size: 0, has_queue: false };
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º userSession –∏–∑ washInfo
  const userSession = washInfo?.userSession || washInfo?.user_session;
  const payment = washInfo?.payment;
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
  const { timeLeft } = useTimer(userSession);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é
  const canCancelSession = userSession && ['created', 'in_queue', 'assigned'].includes(userSession.status);
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
  const refundInfo = formatRefundInfo(payment);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏
  const loadSessionPayments = async () => {
    if (!userSession || !userSession.id) return;
    
    try {
      setLoadingPayments(true);
      const payments = await ApiService.getSessionPayments(userSession.id);
      setSessionPayments(payments);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏:', error);
    } finally {
      setLoadingPayments(false);
    }
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
  useEffect(() => {
    if (userSession && userSession.id) {
      loadSessionPayments();
    }
  }, [userSession?.id]);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–µ—Å—Å–∏–∏
  const handleViewSessionDetails = () => {
    try {
      if (userSession && userSession.id) {
        navigate(`/telegram/session/${userSession.id}`);
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –¥–µ—Ç–∞–ª—è–º —Å–µ—Å—Å–∏–∏: ' + error.message);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–π–∫—É"
  const handleCreateSessionClick = () => {
    try {
      navigate('/telegram/booking');
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–ø–∏—Å–∏: ' + error.message);
    }
  };


  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
  const handleCancelSession = async () => {
    if (!userSession || !user) return;
    
    const confirmMessage = refundInfo.hasRefund 
      ? `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é? –î–µ–Ω—å–≥–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ ${formatAmountWithRefund(payment)} –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –∫–∞—Ä—Ç—É.`
      : '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é?';
    
    if (!window.confirm(confirmMessage)) return;
    
    try {
      setIsCanceling(true);
      await onCancelSession(userSession.id, user.id);
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–µ—Å—Å–∏–∏: ' + error.message);
    } finally {
      setIsCanceling(false);
    }
  };

  const themeClass = theme === 'dark' ? styles.dark : styles.light;

  return (
    <div className={styles.container}>
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–æ–π–∫—É - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏ */}
      {!userSession && (
        <section className={styles.section}>
          <Card theme={theme}>
            <Button 
              theme={theme} 
              onClick={handleCreateSessionClick}
              className={styles.createSessionButton}
              style={{ width: '100%' }}
            >
              –ü–æ–º—ã—Ç—å –º–∞—à–∏–Ω—É/–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å
            </Button>
          </Card>
        </section>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –µ—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Å—Å–∏—è */}
      {userSession && (
        <section className={styles.section}>
          <Card theme={theme}>
            <StatusBadge status={userSession.status} theme={theme} />
            
            {/* –ù–æ–º–µ—Ä –±–æ–∫—Å–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º */}
            {(userSession.boxId || userSession.box_id || userSession.boxNumber || userSession.box_number) && (
              <div style={{
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#E3F2FD',
                borderRadius: '8px',
                border: '2px solid #2196F3',
                textAlign: 'center',
                backgroundColor: boxChanged ? '#fff3cd' : '#E3F2FD',
                border: boxChanged ? '2px solid #ffc107' : '2px solid #2196F3',
                transition: 'all 0.3s ease'
              }}>
                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1976D2' }}>
                  –ë–æ–∫—Å #{
                    userSession.boxNumber || userSession.box_number || 
                    allBoxes.find(box => box.id === (userSession.boxId || userSession.box_id))?.number || 
                    '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ–∫—Å'
                  }
                  {boxChanged && <span style={{ color: '#856404', fontSize: '12px', marginLeft: '8px' }}>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ!</span>}
                </div>
              </div>
            )}
            
            {/* –¢–∞–π–º–µ—Ä—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
            {userSession.status === 'active' && timeLeft !== null && (
              <>
                <p className={`${styles.sessionInfo} ${themeClass}`} style={{ marginTop: '12px', fontWeight: 'bold' }}>
                  –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –º–æ–π–∫–∏:
                </p>
                <Timer seconds={timeLeft} theme={theme} />
                
                {/* –°—Ç–∞—Ç—É—Å –∏ —Ç–∞–π–º–µ—Ä —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞) */}
                {(userSession.withChemistry || userSession.with_chemistry) && 
                 (userSession.wasChemistryOn || userSession.was_chemistry_on) && (
                  <ChemistryStatus session={userSession} />
                )}
              </>
            )}
            
            {/* –¢–∞–π–º–µ—Ä—ã –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
            {userSession.status === 'assigned' && timeLeft !== null && (
              <>
                <p className={`${styles.sessionInfo} ${themeClass}`} style={{ marginTop: '12px', fontWeight: 'bold' }}>
                  –í—Ä–µ–º—è –¥–æ —Å—Ç–∞—Ä—Ç–∞ –º–æ–π–∫–∏:
                </p>
                <Timer seconds={timeLeft} theme={theme} />
              </>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Ç–∞–π–º–µ—Ä–∞–º–∏ */}
            <div style={{ marginTop: '12px', display: 'flex', flexDirection: 'column', gap: '8px' }}>
              <Button 
                theme={theme} 
                onClick={handleViewSessionDetails}
                style={{ width: '100%' }}
              >
                –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–µ—Å—Å–∏–∏
              </Button>
              {canCancelSession && (
                <Button 
                  theme={theme} 
                  onClick={handleCancelSession}
                  disabled={isCanceling}
                  style={{ 
                    backgroundColor: '#F44336',
                    color: 'white',
                    width: '100%'
                  }}
                >
                  {isCanceling ? '–û—Ç–º–µ–Ω–∞...' : '–û—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é'}
                </Button>
              )}
            </div>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ */}
            {payment && (
              <div style={{ 
                marginTop: '12px',
                padding: '8px',
                backgroundColor: '#E8F5E8',
                borderRadius: '4px',
                fontSize: '12px'
              }}>
                <p style={{ margin: '0 0 4px 0', color: '#2E7D32', fontWeight: 'bold' }}>
                  üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {loadingPayments ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : sessionPayments ? formatSessionTotalCost(sessionPayments) : formatAmountWithRefund(payment)}
                </p>
                {refundInfo.hasRefund && (
                  <>
                    <p style={{ margin: '0 0 4px 0', color: '#1976D2', fontWeight: 'bold' }}>
                      üí∏ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {formatAmount(refundInfo.refundedAmount)}
                      {refundInfo.refundType === 'partial' && ` (—á–∞—Å—Ç–∏—á–Ω–æ)`}
                      {refundInfo.refundType === 'full' && ` (–ø–æ–ª–Ω–æ—Å—Ç—å—é)`}
                    </p>
                  </>
                )}
                <p style={{ margin: '0', color: '#2E7D32' }}>
                  {payment.status === 'succeeded' ? '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' :
                   payment.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' :
                   payment.status === 'failed' ? '‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã' :
                   payment.status === 'refunded' ? 'üí∏ –ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ' : '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}
                </p>
                {refundInfo.hasRefund && (
                  <p style={{ margin: '4px 0 0 0', color: '#1976D2', fontWeight: 'bold' }}>
                    üí∞ –ò—Ç–æ–≥–æ: {formatAmount(refundInfo.finalAmount)}
                  </p>
                )}
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã) */}
            {userSession.status === 'created' && (
              <div className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#FFF3E0',
                borderRadius: '8px',
                border: '1px solid #FFB74D'
              }}>
                <p style={{ margin: '0 0 12px 0', fontSize: '14px' }}>
                  –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –æ–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞. 
                  –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–µ—Å—Å–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å.
                </p>
                
                {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
                <Button 
                  theme={theme} 
                  onClick={async () => {
                    try {
                      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –ø–æ —Å–µ—Å—Å–∏–∏
                      const response = await ApiService.getUserSessionForPayment(userSession.user_id);
                      
                      navigate('/telegram/payment', {
                        state: {
                          session: response.session,
                          payment: response.payment,
                          sessionId: userSession.id
                        }
                      });
                    } catch (error) {
                      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
                      alert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ' + error.message);
                    }
                  }}
                  style={{ 
                    marginTop: '8px',
                    backgroundColor: '#FF9800',
                    color: 'white',
                    width: '100%'
                  }}
                >
                  üí≥ –û–ø–ª–∞—Ç–∏—Ç—å
                </Button>
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–µ—Å—Å–∏–∏ —Å –æ—à–∏–±–∫–æ–π –æ–ø–ª–∞—Ç—ã */}
            {userSession.status === 'payment_failed' && (
              <div className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#FFEBEE',
                borderRadius: '8px',
                border: '1px solid #E57373'
              }}>
                <p style={{ margin: '0 0 8px 0', fontWeight: 'bold', color: '#C62828' }}>
                  ‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã
                </p>
                <p style={{ margin: '0 0 12px 0', fontSize: '14px' }}>
                  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. 
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É.
                </p>
                
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ, –µ—Å–ª–∏ –µ—Å—Ç—å */}
                {payment && (
                  <div style={{ 
                    marginBottom: '12px',
                    padding: '8px',
                    backgroundColor: '#FFCDD2',
                    borderRadius: '4px',
                    fontSize: '12px'
                  }}>
                    <p style={{ margin: '0 0 4px 0', color: '#C62828', fontWeight: 'bold' }}>
                      üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {loadingPayments ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : sessionPayments ? formatSessionTotalCost(sessionPayments) : formatAmountWithRefund(payment)}
                    </p>
                    {refundInfo.hasRefund && (
                      <p style={{ margin: '0 0 4px 0', color: '#1976D2', fontWeight: 'bold' }}>
                        üí∏ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {formatAmount(refundInfo.refundedAmount)}
                      </p>
                    )}
                    <p style={{ margin: '0', color: '#C62828' }}>
                      ‚ùå –°—Ç–∞—Ç—É—Å: {getPaymentStatusText(payment.status)}
                    </p>
                    {refundInfo.hasRefund && (
                      <p style={{ margin: '4px 0 0 0', color: '#1976D2', fontWeight: 'bold' }}>
                        üí∞ –ò—Ç–æ–≥–æ: {formatAmount(refundInfo.finalAmount)}
                      </p>
                    )}
                  </div>
                )}
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è */}
            {userSession.status === 'assigned' && timeLeft === null && (
              <p className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                color: '#C62828', 
                textAlign: 'center',
                fontSize: '12px'
              }}>
                ‚ö†Ô∏è –¢–∞–π–º–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (timeLeft = null)
              </p>
            )}
          </Card>
        </section>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—á–µ—Ä–µ–¥–∏ */}
      <section className={styles.section}>
        <h2 className={`${styles.title} ${themeClass}`}>–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–æ–π–∫–∏</h2>
        <Card theme={theme}>
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–∞—Ö –æ—á–µ—Ä–µ–¥–µ–π */}
          <div className={styles.queueTypesContainer}>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–ú–æ–π–∫–∞</h4>
              <StatusBadge 
                status={washQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(washQueue)}
              />
            </div>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–ü—ã–ª–µ—Å–æ—Å</h4>
              <StatusBadge 
                status={vacuumQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(vacuumQueue)}
              />
            </div>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–í–æ–∑–¥—É—Ö</h4>
              <StatusBadge 
                status={airDryQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(airDryQueue)}
              />
            </div>
          </div>
        </Card>
      </section>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π */}
      <section className={styles.section}>
        <h2 className={`${styles.title} ${themeClass}`}>–ò—Å—Ç–æ—Ä–∏—è –º–æ–µ–∫</h2>
        <Card theme={theme}>
          <Button 
            theme={theme} 
            onClick={onViewHistory}
            className={styles.historyButton}
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–æ–µ–∫
          </Button>
        </Card>
      </section>
    </div>
  );
};

export default WashInfo;
