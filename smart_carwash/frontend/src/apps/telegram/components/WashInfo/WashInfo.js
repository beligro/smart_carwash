import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './WashInfo.module.css';
import { Card, Button, StatusBadge, Timer } from '../../../../shared/components/UI';
import { formatDate } from '../../../../shared/utils/formatters';
import { getSessionStatusDescription, getServiceTypeDescription, formatRefundInfo, formatAmount, formatAmountWithRefund, getPaymentStatusText, getPaymentStatusColor, formatSessionTotalCost, formatSessionDetailedCost } from '../../../../shared/utils/statusHelpers';
import useTimer from '../../../../shared/hooks/useTimer';
import ApiService from '../../../../shared/services/ApiService';
// import { useSettings } from '../../../../shared/contexts/SettingsContext';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ç–∞–π–º–µ—Ä–∞ —Ö–∏–º–∏–∏
const ChemistryStatus = ({ session }) => {
  const [chemistryTimeLeft, setChemistryTimeLeft] = useState(null);

  // –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞)
  useEffect(() => {
    if (!session || !session.chemistry_started_at || session.chemistry_ended_at) {
      setChemistryTimeLeft(null);
      return;
    }

    const updateChemistryTimer = () => {
      const startTime = new Date(session.chemistry_started_at);
      const now = new Date();
      const timeLimit = (session.chemistry_time_minutes || 0) * 60 * 1000;
      const timePassed = now - startTime;
      const remaining = timeLimit - timePassed;

      if (remaining <= 0) {
        setChemistryTimeLeft(0);
      } else {
        setChemistryTimeLeft(Math.floor(remaining / 1000));
      }
    };

    updateChemistryTimer();
    const interval = setInterval(updateChemistryTimer, 1000);

    return () => clearInterval(interval);
  }, [session]);

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞
  if (session.was_chemistry_on && session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '8px', padding: '10px', backgroundColor: '#f5f5f5', borderRadius: '6px', fontSize: '12px', color: '#666' }}>
        ‚úì –•–∏–º–∏—è –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ ({session.chemistry_time_minutes} –º–∏–Ω)
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä
  if (session.was_chemistry_on && session.chemistry_started_at && !session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '12px' }}>
        <p style={{ fontSize: '13px', fontWeight: 'bold', margin: '0 0 8px 0', color: '#2e7d32' }}>
          üß™ –•–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞:
        </p>
        {chemistryTimeLeft !== null && chemistryTimeLeft > 0 ? (
          <div style={{ 
            padding: '12px', 
            backgroundColor: '#e8f5e9', 
            borderRadius: '8px',
            border: '2px solid #4caf50',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#2e7d32', marginBottom: '4px' }}>
              {Math.floor(chemistryTimeLeft / 60)}:{(chemistryTimeLeft % 60).toString().padStart(2, '0')}
            </div>
            <div style={{ fontSize: '11px', color: '#666' }}>
              –¥–æ –∞–≤—Ç–æ–≤—ã–∫–ª—é—á–µ–Ω–∏—è
            </div>
          </div>
        ) : (
          <div style={{ 
            padding: '10px', 
            backgroundColor: '#f5f5f5', 
            borderRadius: '6px',
            textAlign: 'center',
            fontSize: '12px',
            color: '#666'
          }}>
            –•–∏–º–∏—è –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...
          </div>
        )}
      </div>
    );
  }

  return null;
};

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—á–µ—Ä–µ–¥–∏ —Å –≤—Ä–µ–º–µ–Ω–µ–º –æ–∂–∏–¥–∞–Ω–∏—è
 * @param {Object} queueInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—á–µ—Ä–µ–¥–∏
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
const formatQueueText = (queueInfo) => {
  if (!queueInfo.has_queue) {
    return '–ù–µ—Ç –æ—á–µ—Ä–µ–¥–∏';
  }
  
  const baseText = `–í –æ—á–µ—Ä–µ–¥–∏: ${queueInfo.queue_size}`;
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
  if (queueInfo.wait_time_minutes && queueInfo.wait_time_minutes > 0) {
    return `${baseText} (–æ–∂–∏–¥–∞–Ω–∏–µ ~${queueInfo.wait_time_minutes} –º–∏–Ω)`;
  }
  
  return baseText;
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç WashInfo - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–π–∫–µ
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.washInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–π–∫–µ
 * @param {string} props.theme - –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ('light' –∏–ª–∏ 'dark')
 * @param {Function} props.onCreateSession - –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
 * @param {Function} props.onViewHistory - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
 * @param {Function} props.onCancelSession - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
 * @param {Object} props.user - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const WashInfo = ({ washInfo, theme = 'light', onCreateSession, onViewHistory, onCancelSession, onChemistryEnabled, onCompleteSession, user }) => {
  const navigate = useNavigate();
  const [isCanceling, setIsCanceling] = useState(false);
  const [sessionPayments, setSessionPayments] = useState(null);
  const [loadingPayments, setLoadingPayments] = useState(false);
  const [boxChanged, setBoxChanged] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏ –¥–µ–π—Å—Ç–≤–∏–π
  const [actionLoading, setActionLoading] = useState(false);
  const [showExtendModal, setShowExtendModal] = useState(false);
  const [showBuyChemistryModal, setShowBuyChemistryModal] = useState(false);
  const [availableRentalTimes, setAvailableRentalTimes] = useState([]);
  const [selectedExtensionTime, setSelectedExtensionTime] = useState(null);
  const [loadingRentalTimes, setLoadingRentalTimes] = useState(false);
  const [availableChemistryTimes, setAvailableChemistryTimes] = useState([]);
  const [selectedChemistryTime, setSelectedChemistryTime] = useState(null);
  const [loadingChemistryTimes, setLoadingChemistryTimes] = useState(false);
  
  // –ö—ç—à –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–∑–∞–≥—Ä—É–∂–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑)
  const [allChemistryTimesFromSettings, setAllChemistryTimesFromSettings] = useState([]);
  const [allRentalTimesFromSettings, setAllRentalTimesFromSettings] = useState([]);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ washInfo (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞)
  const allBoxes = washInfo?.allBoxes || washInfo?.all_boxes || [];
  const washQueue = washInfo?.washQueue || washInfo?.wash_queue || { queue_size: 0, has_queue: false };
  const airDryQueue = washInfo?.airDryQueue || washInfo?.air_dry_queue || { queue_size: 0, has_queue: false };
  const vacuumQueue = washInfo?.vacuumQueue || washInfo?.vacuum_queue || { queue_size: 0, has_queue: false };
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º userSession –∏–∑ washInfo
  const userSession = washInfo?.userSession || washInfo?.user_session;
  const payment = washInfo?.payment;
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
  const { timeLeft } = useTimer(userSession);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é
  const canCancelSession = userSession && ['created', 'in_queue', 'assigned'].includes(userSession.status);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å —Å–µ—Å—Å–∏—é (–≤—Å–µ–≥–¥–∞ –∫–æ–≥–¥–∞ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞ –∏ –≤—Ä–µ–º—è –Ω–µ –∏—Å—Ç–µ–∫–ª–æ)
  const canExtendSession = userSession && 
    userSession.status === 'active' && 
    timeLeft !== null && 
    timeLeft > 0; // –í—Ä–µ–º—è –µ—â–µ –Ω–µ –∏—Å—Ç–µ–∫–ª–æ
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å —Å–µ—Å—Å–∏—é –ø—Ä–∏ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const canRetryExtension = userSession && 
    userSession.status === 'active' && 
    userSession.requested_extension_time_minutes > 0 && // –ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
    payment && 
    (payment.status === 'failed' || payment.status === 'pending'); // –ù–æ –æ–ø–ª–∞—Ç–∞ –Ω–µ—É—Å–ø–µ—à–Ω–∞
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –¥–æ–∫—É–ø–∏—Ç—å —Ö–∏–º–∏—é (—Ö–∏–º–∏—è –Ω–µ –±—ã–ª–∞ –∫—É–ø–ª–µ–Ω–∞ –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞)
  const canBuyChemistry = userSession && 
    userSession.status === 'active' && 
    userSession.service_type === 'wash' &&
    availableChemistryTimes.length > 0; // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
  const refundInfo = formatRefundInfo(payment);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
  const calculateRemainingChemistryTime = React.useCallback((session) => {
    if (!session) return 0;
    
    // –ï—Å–ª–∏ —Ö–∏–º–∏—è –Ω–µ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å—é –∫—É–ø–ª–µ–Ω–Ω—É—é —Ö–∏–º–∏—é
    if (!session.was_chemistry_on || !session.chemistry_started_at) {
      return session.chemistry_time_minutes || 0;
    }
    
    // –ï—Å–ª–∏ —Ö–∏–º–∏—è –±—ã–ª–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞, –∑–Ω–∞—á–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é
    if (session.chemistry_ended_at) {
      return 0;
    }
    
    // –ï—Å–ª–∏ —Ö–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
    if (session.chemistry_started_at && !session.chemistry_ended_at) {
      const startTime = new Date(session.chemistry_started_at);
      const now = new Date();
      const timeLimit = (session.chemistry_time_minutes || 0) * 60 * 1000; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
      const timePassed = now - startTime;
      const remainingMs = timeLimit - timePassed;
      
      if (remainingMs <= 0) {
        return 0;
      }
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–∏–Ω—É—Ç—ã
      return Math.floor(remainingMs / (60 * 1000));
    }
    
    return 0;
  }, []);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏
  const loadSessionPayments = async () => {
    if (!userSession || !userSession.id) return;
    
    try {
      setLoadingPayments(true);
      const payments = await ApiService.getSessionPayments(userSession.id);
      setSessionPayments(payments);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏:', error);
    } finally {
      setLoadingPayments(false);
    }
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
  useEffect(() => {
    if (userSession && userSession.id) {
      loadSessionPayments();
    }
  }, [userSession?.id]);
  
  // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ —Ö–∏–º–∏–∏ –¥–ª—è –¥–æ–∫—É–ø–∫–∏
  useEffect(() => {
    // –ù–µ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç –º–æ–¥–∞–ª –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–∫—É–ø–∫–∏
    if (showExtendModal || showBuyChemistryModal) {
      return;
    }
    
    if (userSession && userSession.status === 'active' && userSession.service_type === 'wash') {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
      if (allChemistryTimesFromSettings.length === 0) {
        const loadSettings = async () => {
          try {
            const response = await ApiService.getAvailableChemistryTimes(userSession.service_type);
            if (response && response.available_chemistry_times) {
              setAllChemistryTimesFromSettings(response.available_chemistry_times);
              
              // –í—ã—á–∏—Å–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –¥–æ–∫—É–ø–∫–∏ (–±–µ–∑ –ø—Ä–æ–¥–ª–µ–Ω–∏—è)
              const remainingWashMinutes = timeLeft ? Math.floor(timeLeft / 60) : 0;
              const remainingChemistryMinutes = calculateRemainingChemistryTime(userSession);
              const availableTime = remainingWashMinutes - remainingChemistryMinutes;
              
              const filteredTimes = response.available_chemistry_times.filter(time => time <= availableTime);
              setAvailableChemistryTimes(filteredTimes);
            }
          } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏:', err);
          }
        };
        loadSettings();
      } else {
        // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –¥–æ–∫—É–ø–∫–∏
        const remainingWashMinutes = timeLeft ? Math.floor(timeLeft / 60) : 0;
        const remainingChemistryMinutes = calculateRemainingChemistryTime(userSession);
        const availableTime = remainingWashMinutes - remainingChemistryMinutes;
        
        const filteredTimes = allChemistryTimesFromSettings.filter(time => time <= availableTime);
        setAvailableChemistryTimes(filteredTimes);
      }
    }
  }, [userSession?.id, userSession?.status, userSession?.service_type, userSession?.was_chemistry_on, userSession?.chemistry_started_at, userSession?.chemistry_ended_at, timeLeft, allChemistryTimesFromSettings, calculateRemainingChemistryTime, showExtendModal, showBuyChemistryModal]);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–µ—Å—Å–∏–∏
  const handleViewSessionDetails = () => {
    try {
      if (userSession && userSession.id) {
        navigate(`/telegram/session/${userSession.id}`);
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –¥–µ—Ç–∞–ª—è–º —Å–µ—Å—Å–∏–∏: ' + error.message);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–π–∫—É"
  const handleCreateSessionClick = () => {
    try {
      navigate('/telegram/booking');
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–ø–∏—Å–∏: ' + error.message);
    }
  };


  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
  const handleCancelSession = async () => {
    if (!userSession || !user) return;
    
    const confirmMessage = refundInfo.hasRefund 
      ? `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é? –î–µ–Ω—å–≥–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ ${formatAmountWithRefund(payment)} –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –∫–∞—Ä—Ç—É.`
      : '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é?';
    
    if (!window.confirm(confirmMessage)) return;
    
    try {
      setIsCanceling(true);
      await onCancelSession(userSession.id, user.id);
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–µ—Å—Å–∏–∏: ' + error.message);
    } finally {
      setIsCanceling(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–π–∫–∏
  const fetchAvailableRentalTimes = async (serviceType) => {
    try {
      setLoadingRentalTimes(true);
      
      // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
      if (allRentalTimesFromSettings.length === 0) {
        const response = await ApiService.getAvailableRentalTimes(serviceType);
        if (response && response.available_times) {
          setAllRentalTimesFromSettings(response.available_times);
          setAvailableRentalTimes(response.available_times);
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          if (response.available_times.length > 0) {
            setSelectedExtensionTime(response.available_times[0]);
          }
        }
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        setAvailableRentalTimes(allRentalTimesFromSettings);
        if (allRentalTimesFromSettings.length > 0 && !selectedExtensionTime) {
          setSelectedExtensionTime(allRentalTimesFromSettings[0]);
        }
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–π–∫–∏: ' + err.message);
    } finally {
      setLoadingRentalTimes(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏
  const fetchAvailableChemistryTimes = async (serviceType, forExtension = false, extensionTime = 0) => {
    try {
      setLoadingChemistryTimes(true);
      
      // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
      if (allChemistryTimesFromSettings.length === 0) {
        const response = await ApiService.getAvailableChemistryTimes(serviceType);
        if (response && response.available_chemistry_times) {
          setAllChemistryTimesFromSettings(response.available_chemistry_times);
        }
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º
      const allChemistryTimes = allChemistryTimesFromSettings.length > 0 
        ? allChemistryTimesFromSettings 
        : [];
      
      if (allChemistryTimes.length > 0) {
        // –í—ã—á–∏—Å–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ö–∏–º–∏–∏
        const remainingWashMinutes = timeLeft ? Math.floor(timeLeft / 60) : 0;
        const remainingChemistryMinutes = calculateRemainingChemistryTime(userSession);
        
        // –î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∫ –æ—Å—Ç–∞–≤—à–µ–º—É—Å—è –≤—Ä–µ–º–µ–Ω–∏ –º–æ–π–∫–∏
        const availableTime = forExtension 
          ? remainingWashMinutes + extensionTime - remainingChemistryMinutes
          : remainingWashMinutes - remainingChemistryMinutes;
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –æ–ø—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã –¥–æ—Å—Ç—É–ø–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
        const filteredTimes = allChemistryTimes.filter(time => time <= availableTime);
        
        setAvailableChemistryTimes(filteredTimes);
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏:', err);
    } finally {
      setLoadingChemistryTimes(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –æ–ø–ª–∞—Ç–æ–π
  const handleExtendSession = async () => {
    if (!selectedExtensionTime) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è');
      return;
    }

    try {
      setActionLoading(true);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –æ–ø–ª–∞—Ç–æ–π
      const response = await ApiService.extendSessionWithPayment(userSession.id, selectedExtensionTime, selectedChemistryTime);
      
      if (response && response.payment) {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
        navigate('/telegram/payment', { 
          state: { 
            session: response.session,
            payment: response.payment,
            paymentType: 'extension',
            sessionId: userSession.id
          } 
        });
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è: ' + err.message);
    } finally {
      setActionLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏
  const handleBuyChemistry = async () => {
    if (!selectedChemistryTime) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏');
      return;
    }

    try {
      setActionLoading(true);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏ (ExtensionTimeMinutes = 0, ExtensionChemistryTimeMinutes = selectedChemistryTime)
      const response = await ApiService.extendSessionWithPayment(userSession.id, 0, selectedChemistryTime);
      
      if (response && response.payment) {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
        navigate('/telegram/payment', { 
          state: { 
            session: response.session,
            payment: response.payment,
            paymentType: 'extension',
            sessionId: userSession.id
          } 
        });
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏: ' + err.message);
    } finally {
      setActionLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const openExtendModal = () => {
    if (userSession && userSession.service_type) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
      setSelectedExtensionTime(null);
      setSelectedChemistryTime(null);
      
      fetchAvailableRentalTimes(userSession.service_type);
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ä–µ–º—è —Ö–∏–º–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–π–∫–∏ —Å —Ö–∏–º–∏–µ–π
      if (userSession.service_type === 'wash' && userSession.with_chemistry) {
        fetchAvailableChemistryTimes(userSession.service_type, true, 0);
      }
      setShowExtendModal(true);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const closeExtendModal = () => {
    setShowExtendModal(false);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏
  const openBuyChemistryModal = () => {
    if (userSession && userSession.service_type === 'wash') {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
      setSelectedChemistryTime(null);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏
      fetchAvailableChemistryTimes(userSession.service_type);
      setShowBuyChemistryModal(true);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏
  const closeBuyChemistryModal = () => {
    setShowBuyChemistryModal(false);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const handleExtensionTimeSelect = (time) => {
    setSelectedExtensionTime(time);
    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏
    if (userSession && userSession.service_type === 'wash' && userSession.with_chemistry) {
      fetchAvailableChemistryTimes(userSession.service_type, true, time);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏
  const handleChemistryTimeSelect = (time) => {
    setSelectedChemistryTime(time);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  const handleCompleteSession = async () => {
    try {
      setActionLoading(true);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
      const response = await ApiService.completeSession(userSession.id);
      
      if (response && response.session) {
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        try {
          const updatedSessionData = await ApiService.getSessionById(userSession.id);
          if (updatedSessionData && updatedSessionData.session) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ callback, –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
            if (onCompleteSession) {
              onCompleteSession(updatedSessionData.session, updatedSessionData.payment);
            }
          }
        } catch (refreshError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏:', refreshError);
          // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–ª–ª–∏–Ω–≥ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ
        }
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: ' + err.message);
    } finally {
      setActionLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏
  const handleStartSession = async () => {
    try {
      setActionLoading(true);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏
      const response = await ApiService.startSession(userSession.id);
      
      if (response && response.session) {
        // –ü–æ–ª–ª–∏–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
        // –ù–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏: ' + err.message);
    } finally {
      setActionLoading(false);
    }
  };

  const themeClass = theme === 'dark' ? styles.dark : styles.light;

  return (
    <div className={styles.container}>
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–æ–π–∫—É - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏ */}
      {!userSession && (
        <section className={styles.section}>
          <Card theme={theme} style={{ padding: '24px' }}>
            <Button 
              theme={theme} 
              onClick={handleCreateSessionClick}
              className={styles.createSessionButton}
              style={{ 
                width: '100%',
                padding: '20px',
                fontSize: '18px',
                fontWeight: 'bold',
                minHeight: '60px',
                backgroundColor: '#4CAF50',
                color: 'white',
                border: 'none',
                borderRadius: '12px',
                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',
                transition: 'all 0.3s ease'
              }}
            >
              –ù–ê–ñ–ú–ò, —á—Ç–æ–±—ã –ø–æ–º—ã—Ç—å –º–∞—à–∏–Ω—É/–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å
            </Button>
          </Card>
        </section>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –µ—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Å—Å–∏—è */}
      {userSession && (
        <section className={styles.section}>
          <Card theme={theme}>
            <StatusBadge status={userSession.status} theme={theme} />
            
            {/* –ù–æ–º–µ—Ä –±–æ–∫—Å–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º */}
            {(userSession.boxId || userSession.box_id || userSession.boxNumber || userSession.box_number) && (
              <div style={{
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#E3F2FD',
                borderRadius: '8px',
                border: '2px solid #2196F3',
                textAlign: 'center',
                backgroundColor: boxChanged ? '#fff3cd' : '#E3F2FD',
                border: boxChanged ? '2px solid #ffc107' : '2px solid #2196F3',
                transition: 'all 0.3s ease'
              }}>
                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1976D2' }}>
                  –ë–æ–∫—Å #{
                    userSession.boxNumber || userSession.box_number || 
                    allBoxes.find(box => box.id === (userSession.boxId || userSession.box_id))?.number || 
                    '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ–∫—Å'
                  }
                  {boxChanged && <span style={{ color: '#856404', fontSize: '12px', marginLeft: '8px' }}>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ!</span>}
                </div>
              </div>
            )}
            
            {/* –¢–∞–π–º–µ—Ä—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
            {userSession.status === 'active' && timeLeft !== null && (
              <>
                <p className={`${styles.sessionInfo} ${themeClass}`} style={{ marginTop: '12px', fontWeight: 'bold' }}>
                  –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –º–æ–π–∫–∏:
                </p>
                <Timer seconds={timeLeft} theme={theme} />
                
                {/* –°—Ç–∞—Ç—É—Å –∏ —Ç–∞–π–º–µ—Ä —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞) */}
                {(userSession.withChemistry || userSession.with_chemistry) && 
                 (userSession.wasChemistryOn || userSession.was_chemistry_on) && (
                  <ChemistryStatus session={userSession} />
                )}
              </>
            )}
            
            {/* –¢–∞–π–º–µ—Ä—ã –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
            {userSession.status === 'assigned' && timeLeft !== null && (
              <>
                <p className={`${styles.sessionInfo} ${themeClass}`} style={{ marginTop: '12px', fontWeight: 'bold' }}>
                  –í—Ä–µ–º—è –¥–æ —Å—Ç–∞—Ä—Ç–∞ –º–æ–π–∫–∏:
                </p>
                <Timer seconds={timeLeft} theme={theme} />
              </>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Ç–∞–π–º–µ—Ä–∞–º–∏ */}
            <div style={{ marginTop: '12px', display: 'flex', flexDirection: 'column', gap: '8px' }}>
              {/* –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
              {userSession.status === 'active' && 
               userSession.with_chemistry && 
               userSession.chemistry_time_minutes > 0 && 
               !userSession.was_chemistry_on && (
                <div style={{ marginTop: '12px' }}>
                  <p style={{ fontSize: '12px', color: '#666', marginBottom: '8px' }}>
                    –û–ø–ª–∞—á–µ–Ω–æ: {userSession.chemistry_time_minutes} –º–∏–Ω. —Ö–∏–º–∏–∏
                  </p>
                  <Button 
                    theme={theme} 
                  onClick={async () => {
                    try {
                      await ApiService.enableChemistry(userSession.id);
                      // –ü–æ–ª–ª–∏–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
                      // –ù–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    } catch (error) {
                      console.error('–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏:', error);
                      alert('–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏: ' + (error.response?.data?.error || error.message));
                    }
                  }}
                    style={{ 
                      backgroundColor: '#4CAF50',
                      color: 'white',
                      width: '100%'
                    }}
                  >
                    üß™ –í–∫–ª—é—á–∏—Ç—å —Ö–∏–º–∏—é
                  </Button>
                </div>
              )}
              
              {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
              {userSession.status === 'active' && (
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {canExtendSession && (
                    <Button 
                      theme={theme} 
                      onClick={openExtendModal}
                      disabled={actionLoading}
                      loading={actionLoading}
                      style={{ width: '100%' }}
                    >
                      –ü—Ä–æ–¥–ª–∏—Ç—å –≤—Ä–µ–º—è
                    </Button>
                  )}
                  {canRetryExtension && (
                    <Button 
                      theme={theme} 
                      onClick={openExtendModal}
                      disabled={actionLoading}
                      loading={actionLoading}
                      style={{ width: '100%', backgroundColor: '#FF9800' }}
                    >
                      üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
                    </Button>
                  )}
                  {canBuyChemistry && (
                    <Button 
                      theme={theme} 
                      onClick={openBuyChemistryModal}
                      disabled={actionLoading}
                      loading={actionLoading}
                      style={{ width: '100%', backgroundColor: '#9C27B0' }}
                    >
                      üß™ –î–æ–∫—É–ø–∏—Ç—å —Ö–∏–º–∏—é
                    </Button>
                  )}
                  <Button 
                    theme={theme} 
                    variant="danger"
                    onClick={handleCompleteSession}
                    disabled={actionLoading}
                    loading={actionLoading}
                    style={{ width: '100%' }}
                  >
                    –ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–π–∫—É
                  </Button>
                </div>
              )}
              
              {/* –ö–Ω–æ–ø–∫–∞ "–í–∫–ª—é—á–∏—Ç—å –±–æ–∫—Å" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –≤ —Å—Ç–∞—Ç—É—Å–µ assigned */}
              {userSession.status === 'assigned' && userSession.box_id && (
                <Button 
                  theme={theme} 
                  onClick={handleStartSession}
                  disabled={actionLoading}
                  loading={actionLoading}
                  style={{ width: '100%' }}
                >
                  –í–∫–ª—é—á–∏—Ç—å –±–æ–∫—Å
                </Button>
              )}

              {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏ */}
              {canCancelSession && (
                <Button 
                  theme={theme} 
                  onClick={handleCancelSession}
                  disabled={isCanceling}
                  loading={isCanceling}
                  style={{ 
                    marginTop: '12px',
                    backgroundColor: '#F44336',
                    color: 'white',
                    width: '100%'
                  }}
                >
                  {isCanceling ? '–û—Ç–º–µ–Ω–∞...' : '–û—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é'}
                </Button>
              )}
            </div>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ */}
            {payment && (
              <div style={{ 
                marginTop: '12px',
                padding: '8px',
                backgroundColor: '#E8F5E8',
                borderRadius: '4px',
                fontSize: '12px'
              }}>
                <p style={{ margin: '0 0 4px 0', color: '#2E7D32', fontWeight: 'bold' }}>
                  üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {loadingPayments ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : sessionPayments ? formatSessionTotalCost(sessionPayments) : formatAmountWithRefund(payment)}
                </p>
                {refundInfo.hasRefund && (
                  <>
                    <p style={{ margin: '0 0 4px 0', color: '#1976D2', fontWeight: 'bold' }}>
                      üí∏ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {formatAmount(refundInfo.refundedAmount)}
                      {refundInfo.refundType === 'partial' && ` (—á–∞—Å—Ç–∏—á–Ω–æ)`}
                      {refundInfo.refundType === 'full' && ` (–ø–æ–ª–Ω–æ—Å—Ç—å—é)`}
                    </p>
                  </>
                )}
                <p style={{ margin: '0', color: '#2E7D32' }}>
                  {payment.status === 'succeeded' ? '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' :
                   payment.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' :
                   payment.status === 'failed' ? '‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã' :
                   payment.status === 'refunded' ? 'üí∏ –ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ' : '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}
                </p>
                {refundInfo.hasRefund && (
                  <p style={{ margin: '4px 0 0 0', color: '#1976D2', fontWeight: 'bold' }}>
                    üí∞ –ò—Ç–æ–≥–æ: {formatAmount(refundInfo.finalAmount)}
                  </p>
                )}
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã) */}
            {userSession.status === 'created' && (
              <div className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#FFF3E0',
                borderRadius: '8px',
                border: '1px solid #FFB74D'
              }}>
                <p style={{ margin: '0 0 12px 0', fontSize: '14px' }}>
                  –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –æ–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞. 
                  –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–µ—Å—Å–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å.
                </p>
                
                {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
                <Button 
                  theme={theme} 
                  onClick={async () => {
                    try {
                      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –ø–æ —Å–µ—Å—Å–∏–∏
                      const response = await ApiService.getUserSessionForPayment(userSession.user_id);
                      
                      navigate('/telegram/payment', {
                        state: {
                          session: response.session,
                          payment: response.payment,
                          sessionId: userSession.id
                        }
                      });
                    } catch (error) {
                      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
                      alert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ' + error.message);
                    }
                  }}
                  style={{ 
                    marginTop: '8px',
                    backgroundColor: '#FF9800',
                    color: 'white',
                    width: '100%'
                  }}
                >
                  üí≥ –û–ø–ª–∞—Ç–∏—Ç—å
                </Button>
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–µ—Å—Å–∏–∏ —Å –æ—à–∏–±–∫–æ–π –æ–ø–ª–∞—Ç—ã */}
            {userSession.status === 'payment_failed' && (
              <div className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                marginTop: '12px',
                padding: '12px',
                backgroundColor: '#FFEBEE',
                borderRadius: '8px',
                border: '1px solid #E57373'
              }}>
                <p style={{ margin: '0 0 8px 0', fontWeight: 'bold', color: '#C62828' }}>
                  ‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã
                </p>
                <p style={{ margin: '0 0 12px 0', fontSize: '14px' }}>
                  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. 
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É.
                </p>
                
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ, –µ—Å–ª–∏ –µ—Å—Ç—å */}
                {payment && (
                  <div style={{ 
                    marginBottom: '12px',
                    padding: '8px',
                    backgroundColor: '#FFCDD2',
                    borderRadius: '4px',
                    fontSize: '12px'
                  }}>
                    <p style={{ margin: '0 0 4px 0', color: '#C62828', fontWeight: 'bold' }}>
                      üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {loadingPayments ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : sessionPayments ? formatSessionTotalCost(sessionPayments) : formatAmountWithRefund(payment)}
                    </p>
                    {refundInfo.hasRefund && (
                      <p style={{ margin: '0 0 4px 0', color: '#1976D2', fontWeight: 'bold' }}>
                        üí∏ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {formatAmount(refundInfo.refundedAmount)}
                      </p>
                    )}
                    <p style={{ margin: '0', color: '#C62828' }}>
                      ‚ùå –°—Ç–∞—Ç—É—Å: {getPaymentStatusText(payment.status)}
                    </p>
                    {refundInfo.hasRefund && (
                      <p style={{ margin: '4px 0 0 0', color: '#1976D2', fontWeight: 'bold' }}>
                        üí∞ –ò—Ç–æ–≥–æ: {formatAmount(refundInfo.finalAmount)}
                      </p>
                    )}
                  </div>
                )}
              </div>
            )}
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è */}
            {userSession.status === 'assigned' && timeLeft === null && (
              <p className={`${styles.sessionInfo} ${themeClass}`} style={{ 
                color: '#C62828', 
                textAlign: 'center',
                fontSize: '12px'
              }}>
                ‚ö†Ô∏è –¢–∞–π–º–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (timeLeft = null)
              </p>
            )}
          </Card>
        </section>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—á–µ—Ä–µ–¥–∏ */}
      <section className={styles.section}>
        <h2 className={`${styles.title} ${themeClass}`}>–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–æ–π–∫–∏</h2>
        <Card theme={theme}>
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–∞—Ö –æ—á–µ—Ä–µ–¥–µ–π */}
          <div className={styles.queueTypesContainer}>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–ú–æ–π–∫–∞</h4>
              <StatusBadge 
                status={washQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(washQueue)}
              />
            </div>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–ü—ã–ª–µ—Å–æ—Å</h4>
              <StatusBadge 
                status={vacuumQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(vacuumQueue)}
              />
            </div>
            <div className={styles.queueTypeItem}>
              <h4 className={`${styles.queueTypeTitle} ${themeClass}`}>–í–æ–∑–¥—É—Ö</h4>
              <StatusBadge 
                status={airDryQueue.has_queue ? 'busy' : 'free'} 
                theme={theme}
                text={formatQueueText(airDryQueue)}
              />
            </div>
          </div>
        </Card>
      </section>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π */}
      <section className={styles.section}>
        <h2 className={`${styles.title} ${themeClass}`}>–ò—Å—Ç–æ—Ä–∏—è –º–æ–µ–∫</h2>
        <Card theme={theme}>
          <Button 
            theme={theme} 
            onClick={onViewHistory}
            className={styles.historyButton}
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–æ–µ–∫
          </Button>
        </Card>
      </section>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ */}
      {showExtendModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000,
          padding: '20px'
        }}>
          <Card theme={theme} style={{ maxWidth: '400px', width: '100%', maxHeight: '80vh', overflow: 'auto' }}>
            <h3 style={{ margin: '0 0 16px 0', fontSize: '18px' }}>–ü—Ä–æ–¥–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏</h3>
            
            {loadingRentalTimes ? (
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...</p>
            ) : (
              <>
                <p style={{ margin: '0 0 12px 0' }}>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</p>
                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(80px, 1fr))', gap: '8px', marginBottom: '16px' }}>
                  {availableRentalTimes.map((time) => (
                    <div 
                      key={time} 
                      style={{
                        padding: '12px',
                        border: selectedExtensionTime === time ? '2px solid #2196F3' : '1px solid #ddd',
                        borderRadius: '8px',
                        textAlign: 'center',
                        cursor: 'pointer',
                        backgroundColor: selectedExtensionTime === time ? '#E3F2FD' : 'white'
                      }}
                      onClick={() => handleExtensionTimeSelect(time)}
                    >
                      <span style={{ fontSize: '16px', fontWeight: 'bold' }}>{time}</span>
                      <span style={{ fontSize: '12px', color: '#666' }}> –º–∏–Ω</span>
                    </div>
                  ))}
                </div>
                
                {/* –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏ –¥–ª—è –º–æ–π–∫–∏ —Å —Ö–∏–º–∏–µ–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
                {userSession && userSession.service_type === 'wash' && userSession.with_chemistry && !loadingChemistryTimes && availableChemistryTimes.length > 0 && (
                  <>
                    <p style={{ margin: '20px 0 12px 0' }}>
                      –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
                    </p>
                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(80px, 1fr))', gap: '8px', marginBottom: '16px' }}>
                      {availableChemistryTimes.map((time) => (
                        <div 
                          key={time} 
                          style={{
                            padding: '12px',
                            border: selectedChemistryTime === time ? '2px solid #2196F3' : '1px solid #ddd',
                            borderRadius: '8px',
                            textAlign: 'center',
                            cursor: 'pointer',
                            backgroundColor: selectedChemistryTime === time ? '#E3F2FD' : 'white'
                          }}
                          onClick={() => handleChemistryTimeSelect(time)}
                        >
                          <span style={{ fontSize: '16px', fontWeight: 'bold' }}>{time}</span>
                          <span style={{ fontSize: '12px', color: '#666' }}> –º–∏–Ω</span>
                        </div>
                      ))}
                    </div>
                  </>
                )}
                
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π */}
                {userSession && userSession.service_type === 'wash' && userSession.with_chemistry && loadingChemistryTimes && (
                  <p style={{ margin: '20px 0 12px 0' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏...</p>
                )}
                
                <div style={{ display: 'flex', gap: '8px', justifyContent: 'flex-end' }}>
                  <Button 
                    theme={theme} 
                    variant="secondary"
                    onClick={closeExtendModal}
                    disabled={actionLoading}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button 
                    theme={theme} 
                    onClick={handleExtendSession}
                    disabled={actionLoading || !selectedExtensionTime}
                    loading={actionLoading}
                  >
                    –ü—Ä–æ–¥–ª–∏—Ç—å
                  </Button>
                </div>
              </>
            )}
          </Card>
        </div>
      )}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–∫—É–ø–∫–∏ —Ö–∏–º–∏–∏ */}
      {showBuyChemistryModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000,
          padding: '20px'
        }}>
          <Card theme={theme} style={{ maxWidth: '400px', width: '100%', maxHeight: '80vh', overflow: 'auto' }}>
            <h3 style={{ margin: '0 0 16px 0', fontSize: '18px' }}>–î–æ–∫—É–ø–∫–∞ —Ö–∏–º–∏–∏</h3>
            
            {loadingChemistryTimes ? (
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏...</p>
            ) : (
              <>
                <p style={{ margin: '0 0 12px 0' }}>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏:</p>
                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(80px, 1fr))', gap: '8px', marginBottom: '16px' }}>
                  {availableChemistryTimes.map((time) => (
                    <div 
                      key={time} 
                      style={{
                        padding: '12px',
                        border: selectedChemistryTime === time ? '2px solid #2196F3' : '1px solid #ddd',
                        borderRadius: '8px',
                        textAlign: 'center',
                        cursor: 'pointer',
                        backgroundColor: selectedChemistryTime === time ? '#E3F2FD' : 'white'
                      }}
                      onClick={() => handleChemistryTimeSelect(time)}
                    >
                      <span style={{ fontSize: '16px', fontWeight: 'bold' }}>{time}</span>
                      <span style={{ fontSize: '12px', color: '#666' }}> –º–∏–Ω</span>
                    </div>
                  ))}
                </div>
                
                <div style={{ display: 'flex', gap: '8px', justifyContent: 'flex-end' }}>
                  <Button 
                    theme={theme} 
                    variant="secondary"
                    onClick={closeBuyChemistryModal}
                    disabled={actionLoading}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button 
                    theme={theme} 
                    onClick={handleBuyChemistry}
                    disabled={actionLoading || !selectedChemistryTime}
                    loading={actionLoading}
                  >
                    –î–æ–∫—É–ø–∏—Ç—å
                  </Button>
                </div>
              </>
            )}
          </Card>
        </div>
      )}
    </div>
  );
};

export default WashInfo;
