import React, { useEffect, useState, useRef } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import styles from './SessionDetails.module.css';
import { Card, Button, StatusBadge, Timer } from '../../../../shared/components/UI';
import { formatDate } from '../../../../shared/utils/formatters';
import { getServiceTypeDescription, formatRefundInfo, formatSessionRefundInfo, formatAmount, formatAmountWithRefund, getPaymentStatusText, getPaymentStatusColor, formatSessionDetailedCost, getDisplayPaymentStatus } from '../../../../shared/utils/statusHelpers';
import ApiService from '../../../../shared/services/ApiService';
import useTimer from '../../../../shared/hooks/useTimer';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ç–∞–π–º–µ—Ä–∞ —Ö–∏–º–∏–∏
const ChemistryStatus = ({ session }) => {
  const [chemistryTimeLeft, setChemistryTimeLeft] = useState(null);

  // –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞)
  useEffect(() => {
    if (!session || !session.chemistry_started_at || session.chemistry_ended_at) {
      setChemistryTimeLeft(null);
      return;
    }

    const updateChemistryTimer = () => {
      const startTime = new Date(session.chemistry_started_at);
      const now = new Date();
      const timeLimit = (session.chemistry_time_minutes || 0) * 60 * 1000;
      const timePassed = now - startTime;
      const remaining = timeLimit - timePassed;

      if (remaining <= 0) {
        setChemistryTimeLeft(0);
      } else {
        setChemistryTimeLeft(Math.floor(remaining / 1000));
      }
    };

    updateChemistryTimer();
    const interval = setInterval(updateChemistryTimer, 1000);

    return () => clearInterval(interval);
  }, [session]);

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞
  if (session.was_chemistry_on && session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '8px', padding: '10px', backgroundColor: '#f5f5f5', borderRadius: '6px', fontSize: '12px', color: '#666' }}>
        ‚úì –•–∏–º–∏—è –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ ({session.chemistry_time_minutes} –º–∏–Ω)
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ö–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä
  if (session.was_chemistry_on && session.chemistry_started_at && !session.chemistry_ended_at) {
    return (
      <div style={{ marginTop: '12px' }}>
        <p style={{ fontSize: '13px', fontWeight: 'bold', margin: '0 0 8px 0', color: '#2e7d32' }}>
          üß™ –•–∏–º–∏—è –∞–∫—Ç–∏–≤–Ω–∞:
        </p>
        {chemistryTimeLeft !== null && chemistryTimeLeft > 0 ? (
          <div style={{ 
            padding: '12px', 
            backgroundColor: '#e8f5e9', 
            borderRadius: '8px',
            border: '2px solid #4caf50',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#2e7d32', marginBottom: '4px' }}>
              {Math.floor(chemistryTimeLeft / 60)}:{(chemistryTimeLeft % 60).toString().padStart(2, '0')}
            </div>
            <div style={{ fontSize: '11px', color: '#666' }}>
              –¥–æ –∞–≤—Ç–æ–≤—ã–∫–ª—é—á–µ–Ω–∏—è
            </div>
          </div>
        ) : (
          <div style={{ 
            padding: '10px', 
            backgroundColor: '#f5f5f5', 
            borderRadius: '6px',
            textAlign: 'center',
            fontSize: '12px',
            color: '#666'
          }}>
            –•–∏–º–∏—è –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...
          </div>
        )}
      </div>
    );
  }

  return null;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏ (—Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞!)
const ChemistryEnableButton = ({ session, theme, onChemistryEnabled }) => {
  const [isEnabling, setIsEnabling] = useState(false);

  const handleEnableChemistry = async () => {
    if (isEnabling) return;

    try {
      setIsEnabling(true);
      await ApiService.enableChemistry(session.id);
      
      if (onChemistryEnabled) {
        onChemistryEnabled();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏:', error);
      alert('–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏: ' + (error.response?.data?.error || error.message));
    } finally {
      setIsEnabling(false);
    }
  };

  return (
    <div style={{ marginTop: '12px' }}>
      <p style={{ fontSize: '12px', color: '#666', marginBottom: '8px' }}>
        –û–ø–ª–∞—á–µ–Ω–æ: {session.chemistry_time_minutes} –º–∏–Ω. —Ö–∏–º–∏–∏
      </p>
      <Button 
        theme={theme} 
        onClick={handleEnableChemistry}
        disabled={isEnabling}
        style={{ 
          backgroundColor: '#4CAF50',
          color: 'white',
          width: '100%'
        }}
      >
        {isEnabling ? '–í–∫–ª—é—á–µ–Ω–∏–µ...' : 'üß™ –í–∫–ª—é—á–∏—Ç—å —Ö–∏–º–∏—é'}
      </Button>
    </div>
  );
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç SessionDetails - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {string} props.theme - –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ('light' –∏–ª–∏ 'dark')
 * @param {Object} props.user - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
 */
const SessionDetails = ({ theme = 'light', user }) => {
  const { sessionId } = useParams();
  const navigate = useNavigate();
  
  const [session, setSession] = useState(null);
  const [payment, setPayment] = useState(null);
  const [box, setBox] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [actionLoading, setActionLoading] = useState(false);
  const [boxChanged, setBoxChanged] = useState(false);
  const [showExtendModal, setShowExtendModal] = useState(false);
  const [availableRentalTimes, setAvailableRentalTimes] = useState([]);
  const [selectedExtensionTime, setSelectedExtensionTime] = useState(null);
  const [loadingRentalTimes, setLoadingRentalTimes] = useState(false);
  const [availableChemistryTimes, setAvailableChemistryTimes] = useState([]);
  const [selectedChemistryTime, setSelectedChemistryTime] = useState(null);
  const [loadingChemistryTimes, setLoadingChemistryTimes] = useState(false);
  const [isCanceling, setIsCanceling] = useState(false);
  const [sessionPayments, setSessionPayments] = useState(null);
  const [loadingPayments, setLoadingPayments] = useState(false);
  
  // Ref –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –ø–æ–ª–ª–∏–Ω–≥–∞
  const pollingInterval = useRef(null);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
  const { timeLeft } = useTimer(session);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é
  const canCancelSession = session && ['created', 'in_queue', 'assigned'].includes(session.status);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å —Å–µ—Å—Å–∏—é (—Ç–æ–ª—å–∫–æ –∑–∞ 3 –º–∏–Ω—É—Ç—ã –¥–æ –∫–æ–Ω—Ü–∞ –∏ –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ)
  const canExtendSession = session && 
    session.status === 'active' && 
    timeLeft !== null && 
    timeLeft <= 1000 && // 5 –º–∏–Ω—É—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    timeLeft > 0 && // –í—Ä–µ–º—è –µ—â–µ –Ω–µ –∏—Å—Ç–µ–∫–ª–æ
    session.requested_extension_time_minutes === 0; // –ù–µ –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å —Å–µ—Å—Å–∏—é –ø—Ä–∏ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const canRetryExtension = session && 
    session.status === 'active' && 
    session.requested_extension_time_minutes > 0 && // –ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
    payment && 
    (payment.status === 'failed' || payment.status === 'pending'); // –ù–æ –æ–ø–ª–∞—Ç–∞ –Ω–µ—É—Å–ø–µ—à–Ω–∞
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
  const refundInfo = sessionPayments ? formatSessionRefundInfo(sessionPayments) : formatRefundInfo(payment);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏
  const loadSessionPayments = async () => {
    if (!sessionId) return;
    
    try {
      setLoadingPayments(true);
      const payments = await ApiService.getSessionPayments(sessionId);
      setSessionPayments(payments);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞—Ç–µ–∂–µ–π —Å–µ—Å—Å–∏–∏:', error);
    } finally {
      setLoadingPayments(false);
    }
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
  useEffect(() => {
    if (sessionId) {
      loadSessionPayments();
    }
  }, [sessionId]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–æ–ª–ª–∏–Ω–≥–∞
  const clearPollingInterval = () => {
    if (pollingInterval.current) {
      clearInterval(pollingInterval.current);
      pollingInterval.current = null;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏
  const startSessionPolling = () => {
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    clearPollingInterval();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–æ–ª–ª–∏–Ω–≥–∞ (–∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥, –Ω–æ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏)
    const pollInterval = session?.status === 'in_queue' ? 1000 : 5000;
    
    pollingInterval.current = setInterval(async () => {
      try {
        const sessionData = await ApiService.getSessionById(sessionId);
        
        if (sessionData && sessionData.session) {
          setSession(sessionData.session);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ–∫—Å–µ –ø—Ä–∏ –ø–æ–ª–ª–∏–Ω–≥–µ - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞
          const newBoxNumber = sessionData.session.box_number;
          const currentBoxNumber = box?.number;
          
          if (newBoxNumber) {
            setBox({ number: newBoxNumber });
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –Ω–æ–º–µ—Ä –±–æ–∫—Å–∞
            if (currentBoxNumber && currentBoxNumber !== newBoxNumber) {
              setBoxChanged(true);
              // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
              setTimeout(() => setBoxChanged(false), 10000);
            }
          } else {
            setBox(null);
          }
          
          // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –ø—Ä–∏ –ø–æ–ª–ª–∏–Ω–≥–µ
          try {
            const paymentResponse = await ApiService.getUserSessionForPayment(sessionData.session.user_id);
            if (paymentResponse && paymentResponse.payment) {
              setPayment(paymentResponse.payment);
            }
          } catch (paymentError) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–∏ –ø–æ–ª–ª–∏–Ω–≥–µ:', paymentError);
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–ª–∞—Ç–µ–∂, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–ª–∞—Ç–µ–∂ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Å—Å–∏–∏
            if (sessionData.payment) {
              setPayment(sessionData.payment);
            }
          }
          
          // –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–∞, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
          if (
            sessionData.session.status === 'complete' || 
            sessionData.session.status === 'canceled' ||
            sessionData.session.status === 'expired'
          ) {
            clearPollingInterval();
          }
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–ª–∏–Ω–≥–µ —Å–µ—Å—Å–∏–∏:', err);
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
      }
    }, pollInterval);
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∞—Ä–µ–Ω–¥—ã
  const fetchAvailableRentalTimes = async (serviceType) => {
    try {
      setLoadingRentalTimes(true);
      const response = await ApiService.getAvailableRentalTimes(serviceType);
      if (response && response.available_times) {
        setAvailableRentalTimes(response.available_times);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if (response.available_times.length > 0) {
          setSelectedExtensionTime(response.available_times[0]);
        }
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∞—Ä–µ–Ω–¥—ã: ' + err.message);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã');
    } finally {
      setLoadingRentalTimes(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏
  const fetchAvailableChemistryTimes = async (serviceType) => {
    try {
      setLoadingChemistryTimes(true);
      const response = await ApiService.getAvailableChemistryTimes(serviceType);
      if (response && response.available_chemistry_times) {
        setAvailableChemistryTimes(response.available_chemistry_times);
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏');
    } finally {
      setLoadingChemistryTimes(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –æ–ø–ª–∞—Ç–æ–π
  const handleExtendSession = async () => {
    if (!selectedExtensionTime) {
      setError('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è');
      return;
    }

    try {
      setActionLoading(true);
      setError(null);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –æ–ø–ª–∞—Ç–æ–π
      const response = await ApiService.extendSessionWithPayment(sessionId, selectedExtensionTime, selectedChemistryTime);
      
      if (response && response.payment) {
        setPayment(response.payment);
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
        navigate('/telegram/payment', { 
          state: { 
            session: response.session,
            payment: response.payment,
            paymentType: 'extension',
            sessionId: sessionId
          } 
        });
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è: ' + err.message);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ–¥–ª–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setActionLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const openExtendModal = () => {
    if (session && session.service_type) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
      setSelectedExtensionTime(null);
      setSelectedChemistryTime(null);
      
      fetchAvailableRentalTimes(session.service_type);
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ä–µ–º—è —Ö–∏–º–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–π–∫–∏ —Å —Ö–∏–º–∏–µ–π
      if (session.service_type === 'wash' && session.with_chemistry) {
        fetchAvailableChemistryTimes(session.service_type);
      }
      setShowExtendModal(true);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const closeExtendModal = () => {
    setShowExtendModal(false);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
  const handleExtensionTimeSelect = (time) => {
    setSelectedExtensionTime(time);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏
  const handleChemistryTimeSelect = (time) => {
    setSelectedChemistryTime(time);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  const handleCompleteSession = async () => {
    try {
      setActionLoading(true);
      setError(null);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
      const response = await ApiService.completeSession(sessionId);
      
      if (response && response.session) {
        setSession(response.session);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (response.payment) {
          setPayment(response.payment);
        }
        
        // –ï—Å–ª–∏ —É —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä –±–æ–∫—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (response.session.box_number) {
          setBox({ number: response.session.box_number });
        }
        // –ò–Ω–∞—á–µ, –µ—Å–ª–∏ —É —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –±–æ–∫—Å, –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
        else if (response.session.box_id) {
          const queueStatus = await ApiService.getQueueStatus();
          const boxInfo = queueStatus.boxes.find(b => b.id === response.session.box_id);
          if (boxInfo) {
            setBox(boxInfo);
          }
        }
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: ' + err.message);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setActionLoading(false);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ—Å—Å–∏–∏
  const fetchSessionDetails = async () => {
    try {
      setLoading(true);
      const response = await ApiService.getSessionById(sessionId);
      
      if (response && response.session) {
        setSession(response.session);
        
        // –í—Å–µ–≥–¥–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂
        try {
          const paymentResponse = await ApiService.getUserSessionForPayment(response.session.user_id);
          if (paymentResponse && paymentResponse.payment) {
            setPayment(paymentResponse.payment);
          }
        } catch (paymentError) {
          console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', paymentError);
          // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–ª–∞—Ç–µ–∂, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–ª–∞—Ç–µ–∂ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Å—Å–∏–∏
          if (response.payment) {
            setPayment(response.payment);
          }
        }
        
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ–∫—Å–∞ - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º box_number
        if (response.session.box_number) {
          setBox({ number: response.session.box_number });
        } else {
          setBox(null);
        }
        
        return response.session;
      } else {
        setError('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return null;
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ—Å—Å–∏–∏: ' + err.message);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Å—Å–∏–∏');
      return null;
    } finally {
      setLoading(false);
    }
  };
  
  // –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ—Å—Å–∏–∏ –∏ –∑–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞
  useEffect(() => {
    if (sessionId) {
      fetchSessionDetails();
      startSessionPolling(); // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    }
    
    // –û—á–∏—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      clearPollingInterval();
    };
  }, [sessionId]);

  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏ –¥–ª—è –±–æ–ª–µ–µ —á–∞—Å—Ç–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏
  useEffect(() => {
    if (session?.status) {
      startSessionPolling();
      
      // –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è –ø–µ—Ä–µ—à–ª–∞ –≤ —Å—Ç–∞—Ç—É—Å in_queue (–ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ), –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      if (session.status === 'in_queue') {
        const timeoutId = setTimeout(() => {
          fetchSessionDetails(); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        }, 3000);
        
        return () => clearTimeout(timeoutId);
      }
    }
  }, [session?.status]);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏
  const handleStartSession = async () => {
    try {
      setActionLoading(true);
      setError(null);
      
      // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏
      const response = await ApiService.startSession(sessionId);
      
      if (response && response.session) {
        setSession(response.session);
        
        // –ï—Å–ª–∏ —É —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä –±–æ–∫—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (response.session.box_number) {
          setBox({ number: response.session.box_number });
        }
        // –ò–Ω–∞—á–µ, –µ—Å–ª–∏ —É —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –±–æ–∫—Å, –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
        else if (response.session.box_id) {
          const queueStatus = await ApiService.getQueueStatus();
          const boxInfo = queueStatus.boxes.find(b => b.id === response.session.box_id);
          if (boxInfo) {
            setBox(boxInfo);
          }
        }
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏: ' + err.message);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Å—Å–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setActionLoading(false);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const handleBack = () => {
    // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    navigate('/telegram');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
  const handleCancelSession = async () => {
    if (!session || !user) return;
    
    const confirmMessage = refundInfo.hasRefund 
      ? `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é? –î–µ–Ω—å–≥–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ ${formatAmountWithRefund(payment)} –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –∫–∞—Ä—Ç—É.`
      : '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é?';
    
    if (!window.confirm(confirmMessage)) return;
    
    try {
      setIsCanceling(true);
      const response = await ApiService.cancelSession(session.id, user.id);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
      setSession(response.session);
      setPayment(response.payment);
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–µ—Å—Å–∏–∏: ' + error.message);
    } finally {
      setIsCanceling(false);
    }
  };

  const themeClass = theme === 'dark' ? styles.dark : styles.light;
  
  if (loading) {
    return (
      <div className={styles.container}>
        <Card theme={theme}>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏...</p>
        </Card>
      </div>
    );
  }
  
  if (error) {
    return (
      <div className={styles.container}>
        <Card theme={theme}>
          <div className={`${styles.errorMessage} ${themeClass}`}>{error}</div>
          <Button theme={theme} onClick={handleBack}>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</Button>
        </Card>
      </div>
    );
  }
  
  if (!session) {
    return (
      <div className={styles.container}>
        <Card theme={theme}>
          <p>–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
          <Button theme={theme} onClick={handleBack}>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</Button>
        </Card>
      </div>
    );
  }
  
  return (
    <div className={styles.container}>
      <Card theme={theme}>
        <h2 className={`${styles.title} ${themeClass}`}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏</h2>
        <StatusBadge status={session.status} theme={theme} />
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>ID —Å–µ—Å—Å–∏–∏:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>{session.id}</div>
        </div>
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>–°–æ–∑–¥–∞–Ω–∞:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>{formatDate(session.created_at)}</div>
        </div>
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>–û–±–Ω–æ–≤–ª–µ–Ω–∞:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>{formatDate(session.updated_at)}</div>
        </div>
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>–¢–∏–ø —É—Å–ª—É–≥–∏:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>
            {getServiceTypeDescription(session.service_type)}
            {session.with_chemistry && ' (—Å —Ö–∏–º–∏–µ–π)'}
          </div>
        </div>
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>–ù–æ–º–µ—Ä –º–∞—à–∏–Ω—ã:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>{session.car_number || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
        </div>
        
        <div className={`${styles.infoRow} ${themeClass}`}>
          <div className={`${styles.infoLabel} ${themeClass}`}>–í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã:</div>
          <div className={`${styles.infoValue} ${themeClass}`}>
            {session.rental_time_minutes || 5} –º–∏–Ω—É—Ç
            {session.extension_time_minutes > 0 && ` (–ø—Ä–æ–¥–ª–µ–Ω–æ –Ω–∞ ${session.extension_time_minutes} –º–∏–Ω—É—Ç)`}
            {session.requested_extension_time_minutes > 0 && ` (–∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –Ω–∞ ${session.requested_extension_time_minutes} –º–∏–Ω—É—Ç)`}
          </div>
        </div>
        
        {(session.box_id || session.box_number) && (
          <div className={`${styles.infoRow} ${themeClass}`}>
            <div className={`${styles.infoLabel} ${themeClass}`}>–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –±–æ–∫—Å:</div>
            <div className={`${styles.infoValue} ${themeClass}`} style={{
              backgroundColor: boxChanged ? '#fff3cd' : 'transparent',
              border: boxChanged ? '2px solid #ffc107' : 'none',
              borderRadius: boxChanged ? '4px' : '0',
              padding: boxChanged ? '4px 8px' : '0',
              transition: 'all 0.3s ease'
            }}>
              {box ? `–ë–æ–∫—Å #${box.number}` : 
               session.box_number ? `–ë–æ–∫—Å #${session.box_number}` : 
               '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ–∫—Å–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}
              {boxChanged && <span style={{ color: '#856404', fontSize: '12px', marginLeft: '8px' }}>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ!</span>}
            </div>
          </div>
        )}
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ */}
        {payment && (
          <>
            <h3 className={`${styles.title} ${themeClass}`} style={{ marginTop: '20px', fontSize: '16px' }}>
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ
            </h3>
            
            <div className={`${styles.infoRow} ${themeClass}`}>
              <div className={`${styles.infoLabel} ${themeClass}`}>–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞:</div>
              <div className={`${styles.infoValue} ${themeClass}`}>
                <span style={{ 
                  color: getDisplayPaymentStatus(session) === '–û–ø–ª–∞—á–µ–Ω' ? '#4CAF50' : 
                         getDisplayPaymentStatus(session) === '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' ? '#FF9800' : 
                         getDisplayPaymentStatus(session) === '–í–æ–∑–≤—Ä–∞—â–µ–Ω' ? '#2196F3' : '#F44336',
                  fontWeight: 'bold'
                }}>
                  {getDisplayPaymentStatus(session)}
                </span>
              </div>
            </div>
            
            {loadingPayments ? (
              <div className={`${styles.infoRow} ${themeClass}`}>
                <div className={`${styles.infoLabel} ${themeClass}`}>–°—É–º–º–∞:</div>
                <div className={`${styles.infoValue} ${themeClass}`}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
              </div>
            ) : sessionPayments ? (
              <>
                <div className={`${styles.infoRow} ${themeClass}`}>
                  <div className={`${styles.infoLabel} ${themeClass}`}>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</div>
                  <div className={`${styles.infoValue} ${themeClass}`}>
                    {formatSessionDetailedCost(sessionPayments).totalCost}
                  </div>
                </div>
                {formatSessionDetailedCost(sessionPayments).details.map((detail, index) => (
                  <div key={index}>
                    <div className={`${styles.infoRow} ${themeClass}`}>
                      <div className={`${styles.infoLabel} ${themeClass}`}>{detail.label}:</div>
                      <div className={`${styles.infoValue} ${themeClass}`}>
                        {detail.value}
                      </div>
                    </div>
                    {detail.refunded && (
                      <div className={`${styles.infoRow} ${themeClass}`}>
                        <div className={`${styles.infoLabel} ${themeClass}`}>–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ:</div>
                        <div className={`${styles.infoValue} ${themeClass}`} style={{ color: '#2196F3', fontWeight: 'bold' }}>
                          {detail.refunded}
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </>
            ) : (
              <div className={`${styles.infoRow} ${themeClass}`}>
                <div className={`${styles.infoLabel} ${themeClass}`}>–°—É–º–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:</div>
                <div className={`${styles.infoValue} ${themeClass}`}>
                  {formatAmountWithRefund(payment)}
                </div>
              </div>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏—Ç—å –¥–ª—è –Ω–µ—É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π, –Ω–µ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏–π) */}
            {(payment.status === 'failed' || payment.status === 'pending') && 
             session.status !== 'canceled' && session.status !== 'complete' && session.status !== 'expired' &&
             payment.payment_type === 'main' && (
              <div style={{ marginTop: '20px', textAlign: 'center' }}>
                <Button 
                  theme={theme} 
                  onClick={async () => {
                    try {
                      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –ø–æ —Å–µ—Å—Å–∏–∏
                      const response = await ApiService.getUserSessionForPayment(session.user_id);
                      
                      navigate('/telegram/payment', {
                        state: {
                          session: response.session,
                          payment: response.payment,
                          sessionId: session.id
                        }
                      });
                    } catch (error) {
                      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
                    }
                  }}
                  style={{ 
                    backgroundColor: '#FF9800',
                    color: 'white',
                    width: '100%'
                  }}
                >
                  üí≥ –û–ø–ª–∞—Ç–∏—Ç—å
                </Button>
              </div>
            )}
          </>
        )}
        
        {/* –¢–∞–π–º–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
        {session.status === 'active' && timeLeft !== null && (
          <>
            <h2 className={`${styles.title} ${themeClass}`} style={{ marginTop: '20px' }}>–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –º–æ–π–∫–∏</h2>
            <Timer seconds={timeLeft} theme={theme} />
          </>
        )}
        
        {/* –¢–∞–π–º–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
        {session.status === 'assigned' && timeLeft !== null && (
          <>
            <h2 className={`${styles.title} ${themeClass}`} style={{ marginTop: '20px' }}>–í—Ä–µ–º—è –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∞</h2>
            <Timer seconds={timeLeft} theme={theme} />
            <p style={{ textAlign: 'center', marginTop: '10px', color: timeLeft <= 60 ? '#C62828' : 'inherit' }}>
              –ù–∞—á–Ω–∏—Ç–µ –º–æ–π–∫—É –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –∏–Ω–∞—á–µ —Ä–µ–∑–µ—Ä–≤ –±—É–¥–µ—Ç —Å–Ω—è—Ç
            </p>
          </>
        )}
        
        {/* –ö–Ω–æ–ø–∫–∞ "–°—Ç–∞—Ä—Ç —Å–µ—Å—Å–∏–∏" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –≤ —Å—Ç–∞—Ç—É—Å–µ assigned */}
        {session.status === 'assigned' && session.box_id && (
          <Button 
            theme={theme} 
            onClick={handleStartSession}
            disabled={actionLoading}
            loading={actionLoading}
          >
            –ù–∞—á–∞—Ç—å –º–æ–π–∫—É
          </Button>
        )}
        
        {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
        {session.status === 'active' && (
          <div className={styles.buttonGroup}>
            {canExtendSession && (
              <Button 
                theme={theme} 
                onClick={openExtendModal}
                disabled={actionLoading}
                loading={actionLoading}
                style={{ marginTop: '10px', marginRight: '10px' }}
              >
                –ü—Ä–æ–¥–ª–∏—Ç—å –º–æ–π–∫—É
              </Button>
            )}
            {canRetryExtension && (
              <Button 
                theme={theme} 
                onClick={openExtendModal}
                disabled={actionLoading}
                loading={actionLoading}
                style={{ marginTop: '10px', marginRight: '10px', backgroundColor: '#FF9800' }}
              >
                üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
              </Button>
            )}
            <Button 
              theme={theme} 
              variant="danger"
              onClick={handleCompleteSession}
              disabled={actionLoading}
              loading={actionLoading}
              style={{ marginTop: '10px' }}
            >
              –ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–π–∫—É
            </Button>
          </div>
        )}

        {/* –°—Ç–∞—Ç—É—Å –∏ —Ç–∞–π–º–µ—Ä —Ö–∏–º–∏–∏ (–µ—Å–ª–∏ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞) */}
        {session.status === 'active' && 
         session.with_chemistry && 
         session.was_chemistry_on && (
          <ChemistryStatus session={session} />
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ */}
        {session.status === 'active' && 
         session.with_chemistry && 
         session.chemistry_time_minutes > 0 && 
         !session.was_chemistry_on && (
          <ChemistryEnableButton 
            session={session} 
            theme={theme} 
            onChemistryEnabled={() => {
              // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è —Ö–∏–º–∏–∏
              fetchSessionDetails();
            }}
          />
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏ */}
        {canCancelSession && (
          <Button 
            theme={theme} 
            onClick={handleCancelSession}
            disabled={isCanceling}
            loading={isCanceling}
            style={{ 
              marginTop: '12px',
              backgroundColor: '#F44336',
              color: 'white'
            }}
          >
            {isCanceling ? '–û—Ç–º–µ–Ω–∞...' : '–û—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é'}
          </Button>
        )}
        
        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ */}
        {showExtendModal && (
          <div className={styles.modalOverlay}>
            <Card theme={theme} className={styles.modal}>
              <h3 className={`${styles.modalTitle} ${themeClass}`}>–ü—Ä–æ–¥–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏</h3>
              
              {loadingRentalTimes ? (
                <p className={`${styles.loadingText} ${themeClass}`}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...</p>
              ) : (
                <>
                  <p className={`${styles.modalText} ${themeClass}`}>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</p>
                  <div className={styles.rentalTimeGrid}>
                    {availableRentalTimes.map((time) => (
                      <div 
                        key={time} 
                        className={`${styles.rentalTimeItem} ${selectedExtensionTime === time ? styles.selectedTime : ''}`}
                        onClick={() => handleExtensionTimeSelect(time)}
                      >
                        <span className={`${styles.rentalTimeValue} ${themeClass}`}>{time}</span>
                        <span className={`${styles.rentalTimeUnit} ${themeClass}`}>–º–∏–Ω</span>
                      </div>
                    ))}
                  </div>
                  
                  {/* –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏ –¥–ª—è –º–æ–π–∫–∏ —Å —Ö–∏–º–∏–µ–π */}
                  {session && session.service_type === 'wash' && session.with_chemistry && (
                    <>
                      <p className={`${styles.modalText} ${themeClass}`} style={{ marginTop: '20px' }}>
                        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ö–∏–º–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
                      </p>
                      {loadingChemistryTimes ? (
                        <p className={`${styles.loadingText} ${themeClass}`}>–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ö–∏–º–∏–∏...</p>
                      ) : (
                        <div className={styles.rentalTimeGrid}>
                          <div 
                            className={`${styles.rentalTimeItem} ${selectedChemistryTime === 0 ? styles.selectedTime : ''}`}
                            onClick={() => handleChemistryTimeSelect(0)}
                          >
                            <span className={`${styles.rentalTimeValue} ${themeClass}`}>0</span>
                            <span className={`${styles.rentalTimeUnit} ${themeClass}`}>–º–∏–Ω</span>
                          </div>
                          {availableChemistryTimes.map((time) => (
                            <div 
                              key={time} 
                              className={`${styles.rentalTimeItem} ${selectedChemistryTime === time ? styles.selectedTime : ''}`}
                              onClick={() => handleChemistryTimeSelect(time)}
                            >
                              <span className={`${styles.rentalTimeValue} ${themeClass}`}>{time}</span>
                              <span className={`${styles.rentalTimeUnit} ${themeClass}`}>–º–∏–Ω</span>
                            </div>
                          ))}
                        </div>
                      )}
                    </>
                  )}
                  
                  <div className={styles.modalButtons}>
                    <Button 
                      theme={theme} 
                      variant="secondary"
                      onClick={closeExtendModal}
                      disabled={actionLoading}
                    >
                      –û—Ç–º–µ–Ω–∞
                    </Button>
                    <Button 
                      theme={theme} 
                      onClick={handleExtendSession}
                      disabled={actionLoading || !selectedExtensionTime}
                      loading={actionLoading}
                    >
                      –ü—Ä–æ–¥–ª–∏—Ç—å
                    </Button>
                  </div>
                </>
              )}
              
              {error && <div className={`${styles.errorMessage} ${themeClass}`}>{error}</div>}
            </Card>
          </div>
        )}
        
        {error && <div className={`${styles.errorMessage} ${themeClass}`}>{error}</div>}
      </Card>
    </div>
  );
};

export default SessionDetails;
