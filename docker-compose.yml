version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: smart_carwash_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: carwash
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    container_name: smart_carwash_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/carwash
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: >
      sh -c "python run.py --service init-db && python run.py --service api"

  # Telegram Bot (optional, can be run separately)
  bot:
    build: ./backend
    container_name: smart_carwash_bot
    restart: always
    depends_on:
      - backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/carwash
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
    volumes:
      - ./backend:/app
    command: python run.py --service bot

  # Frontend
  frontend:
    build: ./frontend
    container_name: smart_carwash_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}

volumes:
  postgres_data:
